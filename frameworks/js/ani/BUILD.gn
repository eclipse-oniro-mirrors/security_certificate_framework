# Copyright (C) 2025-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/ets_frontend/ets2abc_config.gni")
import("//build/ohos.gni")
import("//build/ohos/taihe_idl/taihe.gni")

framework_path = "//base/security/certificate_framework/frameworks"

subsystem_name = "security"
part_name = "certificate_framework"
taihe_generated_file_path = "$taihe_file_path/out/$subsystem_name/$part_name"

copy_taihe_idl("copy_taihe") {
  sources = [ "${framework_path}/js/ani/idl/ohos.security.cert.cert.taihe" ]
  external_deps = [ "crypto_framework:copy_taihe" ]
}

ohos_taihe("run_taihe") {
  taihe_generated_file_path = "$taihe_generated_file_path"
  deps = [ ":copy_taihe" ]
  outputs = [
    "$taihe_generated_file_path/src/ohos.security.cryptoFramework.cryptoFramework.abi.c",
    "$taihe_generated_file_path/src/ohos.security.cert.cert.ani.cpp",
    "$taihe_generated_file_path/src/ohos.security.cert.cert.abi.c",
  ]
}

taihe_shared_library("cert_framework_ani") {
  taihe_generated_file_path = "$taihe_generated_file_path"
  subsystem_name = "$subsystem_name"
  part_name = "$part_name"
  include_dirs = [
    "${framework_path}/js/ani/inc",
    "${framework_path}/common/v1.0/inc",
  ]
  sources = get_target_outputs(":run_taihe")
  sources += [
    "${framework_path}/js/ani/src/ani_cert_chain_build_result.cpp",
    "${framework_path}/js/ani/src/ani_cert_chain_validator.cpp",
    "${framework_path}/js/ani/src/ani_cert_cms_generator.cpp",
    "${framework_path}/js/ani/src/ani_cert_crl_collection.cpp",
    "${framework_path}/js/ani/src/ani_cert_extension.cpp",
    "${framework_path}/js/ani/src/ani_common.cpp",
    "${framework_path}/js/ani/src/ani_constructor.cpp",
    "${framework_path}/js/ani/src/ani_object.cpp",
    "${framework_path}/js/ani/src/ani_parameters.cpp",
    "${framework_path}/js/ani/src/ani_pub_key.cpp",
    "${framework_path}/js/ani/src/ani_x500_distinguished_name.cpp",
    "${framework_path}/js/ani/src/ani_x509_cert.cpp",
    "${framework_path}/js/ani/src/ani_x509_cert_chain.cpp",
    "${framework_path}/js/ani/src/ani_x509_cert_chain_validate_result.cpp",
    "${framework_path}/js/ani/src/ani_x509_crl.cpp",
    "${framework_path}/js/ani/src/ani_x509_crl_entry.cpp",
  ]
  deps = [
    ":run_taihe",
    "${framework_path}/core:certificate_framework_core",
  ]
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    boundary_sanitize = true
    debug = false
    integer_overflow = true
    ubsan = true
  }
  cflags = [
    "-DHILOG_ENABLE",
    "-fPIC",
    "-g3",
  ]
  external_deps = [
    "c_utils:utils",
    "crypto_framework:crypto_framework_lib",
    "hilog:libhilog",
  ]
}

generate_static_abc("cert_framework_ets") {
  base_url = "$taihe_generated_file_path"
  files = [ "$taihe_generated_file_path/@ohos.security.cert.ets" ]
  is_boot_abc = "True"
  device_dst_file = "/system/framework/cert_framework_ets.abc"
  dependencies = [ ":run_taihe" ]
}

ohos_prebuilt_etc("cert_framework_etc") {
  source = "$target_out_dir/cert_framework_ets.abc"
  module_install_dir = "framework"
  part_name = "$part_name"
  subsystem_name = "$subsystem_name"
  deps = [ ":cert_framework_ets" ]
}

group("certificate_framework_ani") {
  deps = [
    ":cert_framework_ani",
    ":cert_framework_etc",
  ]
}
